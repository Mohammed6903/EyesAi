import org.apache.tools.ant.taskdefs.Expand

tasks.register('downloadModelFile', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_ssd_mobilenet_v1_1_metadata_2.tflite'
    dest "${project.ext.ASSET_DIR}/mobilenetv1.tflite"
    overwrite false
}

tasks.register('downloadModelFile0', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite0_detection_metadata_1.tflite'
    dest "${project.ext.ASSET_DIR}/efficientdet-lite0.tflite"
    overwrite false
}

tasks.register('downloadModelFile1', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite1_detection_metadata_1.tflite'
    dest "${project.ext.ASSET_DIR}/efficientdet-lite1.tflite"
    overwrite false
}

tasks.register('downloadModelFile2', Download) {
    src 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/task_library/object_detection/android/lite-model_efficientdet_lite2_detection_metadata_1.tflite'
    dest "${project.ext.ASSET_DIR}/efficientdet-lite2.tflite"
    overwrite false
}

tasks.register('downloadModelFile3', Download) {
    src 'https://www.kaggle.com/api/v1/models/tensorflow/efficientdet/tfLite/lite3-detection-metadata/1/download'
    dest "${buildDir}/tmp/efficientdet-lite3.tar.gz"
    overwrite false
}

tasks.register('extractModelFile3') {
    dependsOn downloadModelFile3
    doLast {
        def tarGzFile = file("${buildDir}/tmp/efficientdet-lite3.tar.gz")
        def outputDir = file("${buildDir}/tmp/extracted")

        outputDir.mkdirs()

        // Extract .tar.gz file
        copy {
            from tarTree(resources.gzip(tarGzFile))
            into outputDir
        }

        // Find the extracted .tflite file (assuming itâ€™s named "1.tflite")
        def extractedFiles = outputDir.listFiles()
        def tfliteFile = extractedFiles.find { it.name.endsWith(".tflite") }

        if (tfliteFile) {
            tfliteFile.renameTo(file("${project.ext.ASSET_DIR}/efficientdet-lite3.tflite"))
        } else {
            throw new GradleException("Failed to extract 1.tflite from tar.gz")
        }
    }
}

tasks.register('downloadAndPrepareModel3') {
    dependsOn extractModelFile3
}

tasks.register('copyTestModel', Copy) {
    dependsOn downloadModelFile
    from "${project.ext.ASSET_DIR}/mobilenetv1.tflite"
    into project.ext.TEST_ASSETS_DIR
}

preBuild.dependsOn downloadModelFile, downloadModelFile0, downloadModelFile1, downloadModelFile2, copyTestModel, downloadAndPrepareModel3
